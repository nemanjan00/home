---
version: "3.5"
services:

  # Watchtower for automated updates
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    networks:
      - home

  # Pihole for ad blocking
  pihole:
    image: pihole/pihole
    environment:
      TZ: 'Europe/Belgrade'
      WEBPASSWORD: fU1HRlMxGy9oNlkPxYSc
      VIRTUAL_HOST: pihole.local
    volumes:
      - ./data/pihole/etc/pihole:/etc/pihole
      - ./data/pihole/etc/dnsmasq:/etc/dnsmasq

    restart: unless-stopped

    networks:
      home:
        ipv4_address: 10.5.0.200

    labels:
      - "traefik.enable=true"

      - "traefik.http.services.pihole.loadbalancer.server.port=80"

      - "traefik.http.middlewares.pihole-prefix.addprefix.prefix=/admin"

      - "traefik.http.routers.pihole.service=pihole"
      - "traefik.http.routers.pihole.rule=Host(`pihole.local`)"
      - "traefik.http.routers.pihole.middlewares=pihole-prefix"

  # CoreDNS for custom DNS records
  coredns:
    image: coredns/coredns
    command: -conf /data/Main
    ports:
      - 53:53/udp
    volumes:
      - ./coredns/config:/data

    restart: unless-stopped

    networks:
      - home

  # Traefik for exposing web services
  reverse-proxy:
    image: traefik:v2.4
    #command: --api.insecure=true --providers.docker /etc/traefik
    #command: --api.insecure=true --providers.docker
    ports:
      - "10.25.0.15:80:80"
      - "10.25.0.15:8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik:/etc/traefik

    restart: unless-stopped

    networks:
      - home

  # ZNC
  znc:
    image: znc

    restart: unless-stopped

    networks:
      - home

    volumes:
      - ./data/znc:/znc-data

    ports:
      - 6667:6667

    labels:
      - "traefik.enable=true"

      - "traefik.http.services.znc.loadbalancer.server.port=6667"

      - "traefik.http.routers.znc.service=znc"
      - "traefik.http.routers.znc.rule=Host(`znc.local`)"

    restart: unless-stopped

  # Gitea for local git storage
  gitea:
    image: gitea/gitea:1.14.2
    environment:
      - USER_UID=1000
      - USER_GID=1000
      - GITEA__database__DB_TYPE=postgres
      - GITEA__database__HOST=gitea-postgres:5432
      - GITEA__database__NAME=gitea
      - GITEA__database__USER=gitea
      - GITEA__database__PASSWD=gitea

    labels:
      - "traefik.enable=true"

      - "traefik.http.services.gitea.loadbalancer.server.port=3000"

      - "traefik.http.routers.gitea.service=gitea"
      - "traefik.http.routers.gitea.rule=Host(`gitea.local`)"

    restart: unless-stopped

    networks:
      - home

    volumes:
      - ./data/gitea/git:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

    ports:
      - "2222:22"

  gitea-postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=gitea
      - POSTGRES_PASSWORD=gitea
      - POSTGRES_DB=gitea

    networks:
      - home

    volumes:
      - ./data/gitea/postgres:/var/lib/postgresql/data

    restart: unless-stopped

  # Plex
  plex:
    image: ghcr.io/linuxserver/plex
    container_name: plex
    environment:
      - PUID=1000
      - PGID=1000
      - VERSION=docker
    volumes:
      - ./data/plex/config:/config
      - ~/Desktop/TVShows:/tv
      - ~/Desktop/Movies:/movies
      - ~/Video:/Video
      - ~/Pics:/Pics
    devices:
      - /dev/dri:/dev/dri
    networks:
      - home
    privileged: true
    restart: unless-stopped

    labels:
      - "traefik.enable=true"

      - "traefik.http.services.plex.loadbalancer.server.port=32400"

      #- "traefik.http.middlewares.plex-prefix.addprefix.prefix=/web"

      - "traefik.http.routers.plex.service=plex"
      - "traefik.http.routers.plex.rule=Host(`plex.local`)"
      #- "traefik.http.routers.plex.middlewares=plex-prefix"

networks:
  home:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1
